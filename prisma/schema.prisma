generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model task_status {
  id          Int     @id @db.TinyInt
  description String  @db.VarChar(36)
  tasks       tasks[]
}

model tasks {
  id             Int            @id @default(autoincrement())
  name           String         @db.VarChar(50)
  description    String?        @db.TinyText
  start_date     DateTime       @db.DateTime(0)
  end_date       DateTime       @db.DateTime(0)
  created_at     DateTime?      @default(dbgenerated("(now())")) @db.DateTime(0)
  status         Int?           @default(1) @db.TinyInt
  category       Int
  task_status    task_status?   @relation(fields: [status], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tasks_task_status")
  tasks_category tasks_category @relation(fields: [category], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tasks_tasks_category")

  @@index([status], map: "fk_tasks_task_status")
  @@index([category], map: "fk_tasks_tasks_category")
}

model tasks_category {
  id          Int       @id @default(autoincrement())
  description String    @db.VarChar(36)
  created_at  DateTime? @default(dbgenerated("(now())")) @db.DateTime(0)
  user_id     String    @db.VarChar(36)
  archive     Int?      @default(0) @db.TinyInt
  tasks       tasks[]
  users       users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tasks_category_users")

  @@index([user_id], map: "fk_tasks_category_users")
}

model users {
  id             String           @id @default(uuid()) @db.VarChar(36)
  given_name     String           @db.VarChar(36)
  family_name    String           @db.VarChar(36)
  middle_name    String?          @db.VarChar(20)
  suffix         String?          @db.VarChar(5)
  created_at     DateTime?        @default(dbgenerated("(now())")) @db.DateTime(0)
  updated_at     DateTime?        @default(dbgenerated("(now())")) @db.DateTime(0)
  username       String           @unique @db.VarChar(36)
  password       String           @db.VarChar(60)
  tasks_category tasks_category[]
}
